<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd 
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="dummyprojectfromapispecification-main">
		<http:listener config-ref="dummyprojectfromapispecification-httpListenerConfig"
			path="/api/*">
			<http:response statusCode="#[vars.httpStatus default 200]">
				<http:headers>#[vars.outboundHeaders default {}]</http:headers>
			</http:response>
			<http:error-response statusCode="#[vars.httpStatus default 500]">
				<http:body>#[payload]</http:body>
				<http:headers>#[vars.outboundHeaders default {}]</http:headers>
			</http:error-response>
		</http:listener>
		<apikit:router config-ref="dummyprojectfromapispecification-config" />
		<error-handler>
			<on-error-propagate type="APIKIT:BAD_REQUEST">
				<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
					xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus">400
						</ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-propagate>
			<on-error-propagate type="APIKIT:NOT_FOUND">
				<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
					xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus">404
						</ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-propagate>
			<on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
				<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
					xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus">405
						</ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-propagate>
			<on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
				<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
					xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus">406
						</ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-propagate>
			<on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
				<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
					xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus">415
						</ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-propagate>
			<on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
				<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
					xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus">501
						</ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="dummyprojectfromapispecification-console">
		<http:listener config-ref="dummyprojectfromapispecification-httpListenerConfig"
			path="/console/*">
			<http:response statusCode="#[vars.httpStatus default 200]">
				<http:headers>#[vars.outboundHeaders default {}]</http:headers>
			</http:response>
			<http:error-response statusCode="#[vars.httpStatus default 500]">
				<http:body>#[payload]</http:body>
				<http:headers>#[vars.outboundHeaders default {}]</http:headers>
			</http:error-response>
		</http:listener>
		<apikit:console config-ref="dummyprojectfromapispecification-config" />
		<error-handler>
			<on-error-propagate type="APIKIT:NOT_FOUND">
				<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
					xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus">404
						</ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow
		name="put:\users\(ID):application\json:dummyprojectfromapispecification-config">
		<choice doc:name="Choice" doc:id="90073d49-042a-40b5-9607-333ff865f76d">
			<when
				expression="#[(payload.email == null or payload.email == '') 
and (payload.firstname == null or payload.firstname == '') 
and (payload.lastname == null or payload.lastname == '' )
and (payload.avatar == null or payload.avatar == '')]">
				<ee:transform doc:name="Transform Message"
					doc:id="ade7d3af-8700-49b3-b706-df89507bdda5">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	'status': 204,
	'message': 'Body is empty, Please send a valid user info'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise>
				<db:update doc:name="Update" doc:id="20f17dd8-b950-4256-a826-6805084e3335"
					config-ref="Database_Config">
					<db:sql>UPDATE user SET email=:email, first_name=:firstname,
						last_name=:lastname, image=:image Where userid=:userid
					</db:sql>
					<db:input-parameters><![CDATA[#[{
	 userid: attributes.uriParams.ID,
	 email: payload.email,
	'firstname': payload.firstname,
	'lastname': payload.lastname,
	'image': payload.avatar
}]]]></db:input-parameters>
				</db:update>
				<ee:transform doc:name="Transform Message"
					doc:id="4abb5d9a-f845-459c-9f79-6047aca6bea1">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	status: 201,
	'message': 'User Updated successfully'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow name="delete:\users\(ID):dummyprojectfromapispecification-config">
		<db:delete doc:name="Delete" doc:id="072f7bfd-aad6-48d5-9178-19726b5b389d" config-ref="Database_Config">
			<db:sql >DELETE FROM user where userid= :userid</db:sql>
			<db:input-parameters ><![CDATA[#[{
	'userid': attributes.uriParams.ID
}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="e261e7ec-628c-43ca-8b9e-228c6229d7bc" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	status: 201,
	'message': 'User deleted successfully'
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="get:\users:dummyprojectfromapispecification-config">
		<db:select doc:name="Select" doc:id="6ca08d7b-d425-4049-a56c-e3638dc22353"
			config-ref="Database_Config">
			<db:sql>SELECT * FROM user</db:sql>
		</db:select>
		<choice doc:name="Choice" doc:id="4220e94c-69bd-44de-8a36-2170491b1b4f" >
			<when expression="#[payload != null]">
				<ee:transform doc:name="Transform Message" doc:id="aa06507a-43f0-43a0-9226-9c429519474d">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	id: payload01.userid,
	email: payload01.email default "",
	first_name: payload01.first_name default "",
	last_name: payload01.last_name default "",
	avatar: payload01.image default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="ebccf83a-6846-449b-a2e0-a06df80f4e19" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	status: 200,
	'message': 'No Data Found'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow name="get:\users\(ID):dummyprojectfromapispecification-config">
		<db:select doc:name="Select" doc:id="b59f5a2d-341b-4a0e-8355-91b3341467ec"
			config-ref="Database_Config">
			<db:sql>SELECT * FROM user WHERE userid=:userid</db:sql>
			<db:input-parameters><![CDATA[#[{
	'userid': attributes.uriParams.ID
}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="b92a7b29-ed12-4aec-b81b-02bbbb6db204">
			<when expression="#[payload.userid != null]">
				<ee:transform doc:name="Transform Message"
					doc:id="feff4225-55f0-43d6-8e6a-759a2bcd3801">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	id: payload01.userid,
	email: payload01.email default "",
	first_name: payload01.first_name default "",
	last_name: payload01.last_name default "",
	avatar: payload01.image default ""
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise>
				<ee:transform doc:name="Transform Message"
					doc:id="b445e2b7-6418-4c3a-8145-098b3851cfc4">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	status: 200,
	'message': 'User Not found'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow
		name="post:\users:application\json:dummyprojectfromapispecification-config">
		<choice doc:name="Choice" doc:id="e8659750-dc89-4151-8516-f77eb68a8230">
			<when
				expression="#[(payload.email == null or payload.email == '') 
and (payload.firstname == null or payload.firstname == '') 
and (payload.lastname == null or payload.lastname == '' )
and (payload.avatar == null or payload.avatar == '')]"
				doc:id="44d23192-1614-433f-a6f0-6c03e74f39cf">
				<ee:transform doc:name="Transform Message"
					doc:id="82ac53c4-deec-4a08-9c9a-e56a19e86aa9">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	'status': 204,
	'message': 'Body is empty, Please send a valid user info'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise>
				<db:insert doc:name="Insert" doc:id="5b477be7-7c70-4df7-9812-92076f746387"
					config-ref="Database_Config">
					<db:sql>INSERT INTO user (email,first_name,last_name,image)
						VALUES(:email, :firstname, :lastname, :image)
					</db:sql>
					<db:input-parameters><![CDATA[#[{
	 email: payload.email,
	'firstname': payload.firstname,
	'lastname': payload.lastname,
	'image': payload.avatar
}]]]></db:input-parameters>
				</db:insert>
				<ee:transform doc:name="Transform Message"
					doc:id="f172f9c5-2b66-47a8-aa42-40ef0e11e16a">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	status: 201,
	'message': 'User added successfully'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
</mule>
